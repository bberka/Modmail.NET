@using Microsoft.EntityFrameworkCore
@using Modmail.NET.Language
@using Modmail.NET.Static
@using Serilog
@inject IDbContextFactory<ModmailDbContext> dbContextFactory
@inject  NotificationService notificationService

@code {

  [Parameter]
  public DialogService DialogService { get; set; }

  private List<DiscordUserInfo> _users = new();

  private TeamPermissionLevel? permissionLevel;
  private bool pingOnNewTicket = false;
  private bool pingOnTicketMessage = false;
  private string? teamName;

  protected override async Task OnInitializedAsync() {
    await base.OnInitializedAsync();
    var dbContext = await dbContextFactory.CreateDbContextAsync();

    _users = await dbContext.DiscordUserInfos
                            .OrderBy(x => x.Username)
                            .Where(x => x.Id != ModmailBot.This.Client.CurrentUser.Id && BotConfig.This.OwnerUsers.Contains(x.Id))
                            .ToListAsync();
  }

  private async Task SubmitAsync() {
    if (string.IsNullOrEmpty(teamName)) {
      notificationService.Notify(NotificationSeverity.Warning, "Warning", "Please enter a team name.");
      return;
    }

    if (permissionLevel is null) {
      notificationService.Notify(NotificationSeverity.Warning, "Warning", "Please select a permission level.");
      return;
    }

    var dialogResult = await DialogService.Confirm("Are you sure you want to create new team ?",
                                                   options: new ConfirmOptions() {
                                                     OkButtonText = "Yes",
                                                     CancelButtonText = "No",
                                                     CloseDialogOnOverlayClick = true,
                                                     CloseDialogOnEsc = true,
                                                   });
    if (dialogResult == true) {
      const string logMessage = $"[{nameof(CreateTeamDialog)}]{nameof(SubmitAsync)}({{TeamName}},{{PermissionLevel}})";
      try {
        await GuildTeam.ProcessCreateTeamAsync(teamName, permissionLevel.Value, pingOnNewTicket, pingOnTicketMessage);
        Log.Information(logMessage, teamName, permissionLevel);
        notificationService.Notify(NotificationSeverity.Success, "Success", "Team created successfully.");
        DialogService.Close(true);
      }
      catch (BotExceptionBase ex) {
        Log.Warning(ex, logMessage, teamName, permissionLevel);
        ex.NotifyException(notificationService);
      }
      catch (Exception ex) {
        Log.Fatal(ex, logMessage, teamName, permissionLevel);
        ex.NotifyException(notificationService);
      }
    }
  }

  // private sealed record AddBlackListModel(ulong UserId);

}


<RadzenRow>
  <RadzenColumn>
    @* <RadzenRow class=""> *@
    @*   $1$ <p> #1# *@
    @*   $1$    #1# *@
    @*   $1$ </p> #1# *@
    @*   $1$ <p> #1# *@
    @*   $1$   You can only see users that are interacted with the bot. #1# *@
    @*   $1$ </p> #1# *@
    @* </RadzenRow> *@
    <RadzenRow class="rz-my-4">
      <RadzenFormField Text="Team Name" class="w-100" Variant="Variant.Filled">
        <RadzenTextBox Name="team-name" @bind-Value="@teamName" />
      </RadzenFormField>
    </RadzenRow>
    <RadzenRow class="rz-my-4">
      <RadzenDropDown Style="user-select: none" Name="permission-level" Data="Enum.GetValues<TeamPermissionLevel>()" class="w-100"  TValue="TeamPermissionLevel?" @bind-Value="permissionLevel" Placeholder="Select Permission Level" AllowFiltering="false"/>
    </RadzenRow>
    <RadzenRow class="rz-my-4">
      <RadzenSwitch Name="pingOnNewTicket" @bind-Value=@pingOnNewTicket/>
      <RadzenLabel Component="pingOnNewTicket">
        Ping on new ticket
      </RadzenLabel>
    </RadzenRow>
    <RadzenRow class="rz-my-4">
      <RadzenSwitch Name="pingOnTicketMessage" @bind-Value=@pingOnTicketMessage/>
      <RadzenLabel Component="pingOnTicketMessage">
        Ping on ticket message
      </RadzenLabel>
      
    </RadzenRow>
    <RadzenRow class="rz-my-4">
      <RadzenButton ButtonType="ButtonType.Button" ButtonStyle="ButtonStyle.Primary" Text="Create Team" Click="SubmitAsync"/>
    </RadzenRow>
  </RadzenColumn>
</RadzenRow>