@using Microsoft.EntityFrameworkCore
@using Modmail.NET.Database.Entities
@using Modmail.NET.Features.User.Queries
@using Modmail.NET.Web.Blazor.Providers
@inject IDbContextFactory<ModmailDbContext> DbContextFactory
@inject ISender Sender
@attribute [AuthorizeTeam]

@code {

  [Parameter]
  public Guid TicketId { get; set; }

  bool _isLoading = false;

  async Task ShowLoading() {
    _isLoading = true;

    await Task.Yield();

    _isLoading = false;
  }

  private IQueryable<TicketNote>? _data;
  private Dictionary<ulong, UserInformation> _users = new();
  private int _count = 0;

  private async Task ReloadDataAsync(LoadDataArgs? args = null) {
    await ShowLoading();

    var dbContext = await DbContextFactory.CreateDbContextAsync();
    var query = dbContext.TicketNotes
                         .Where(x => x.TicketId == TicketId)
                         .OrderByDescending(x => x.RegisterDateUtc)
                         .AsQueryable();

    query = query.ApplyDataGridFilter(args);

    _count = await query.CountAsync();

    _data = args is not null
              ? query.ApplyPagination(args)
              : query.Skip(0).Take(10).AsQueryable();

    StateHasChanged();
  }


  protected override async Task OnInitializedAsync() {
    _users = await Sender.Send(new GetDiscordUserInfoDictQuery());
    await ReloadDataAsync();
  }


  private async Task LoadDataAsync(LoadDataArgs args) {
    await ReloadDataAsync(args);
  }


}

<div class="rz-mx-auto">
  <RadzenRow>
    <RadzenColumn Size="12">
      <RadzenRow RowGap="4" class="rz-mt-5">
        @if (_data is null) {
          <Loading></Loading>
        }
        else {
          <RadzenCard Style="width: 100% !important;" class="rz-shadow-7">
            <RadzenDataGrid Responsive="true" Count="_count" LoadData="LoadDataAsync" AllowColumnPicking="false"
                            Density="Density.Default"
                            AllowFiltering="true" AllowColumnResize="true" AllowAlternatingRows="false"
                            FilterMode="FilterMode.SimpleWithMenu"
                            AllowGrouping="false" AllowSorting="true" PageSize="10" AllowPaging="true"
                            PagerHorizontalAlign="HorizontalAlign.Left" PagerPosition="PagerPosition.TopAndBottom"
                            PagerAlwaysVisible="false" GotoFirstPageOnSort="true"
                            Data="@_data" TItem="TicketNote" ColumnWidth="180px"
                            LogicalFilterOperator="LogicalFilterOperator.Or" ShowPagingSummary="true"
                            IsLoading=@_isLoading Sort="@ShowLoading" Page="@ShowLoading" Group="@ShowLoading"
                            Filter="@ShowLoading">
              <Columns>
                <RadzenDataGridColumn Visible="false" Property="@nameof(TicketNote.Id)" Filterable="false" Title="ID"
                                      TextAlign="TextAlign.Center"/>
                <RadzenDataGridColumn Property="@nameof(TicketNote.RegisterDateUtc)"
                                      Title=@Lang.RegisterDateUtc.Translate()/>
                <RadzenDataGridColumn Property="@nameof(TicketNote.Content)" Title="Note Content"/>

                <RadzenDataGridColumn Title="From User Avatar" Sortable="false" Filterable="false"
                                      TextAlign="TextAlign.Center">
                  <Template Context="data">
                    <RadzenStack AlignItems="AlignItems.Center" class="rz-mx-auto rz-my-12">
                      <RadzenImage class="rz-m-0 rz-p-0" Style="width: 100px; height: 100px"
                                   Path="@_users[data.UserId].AvatarUrl" AlternateText=""/>
                    </RadzenStack>
                  </Template>
                </RadzenDataGridColumn>
                <RadzenDataGridColumn Title="From Username" Sortable="true" Filterable="true"
                                      TextAlign="TextAlign.Center">
                  <Template Context="data">
                    <RadzenStack AlignItems="AlignItems.Center" class="rz-mx-auto rz-my-12">
                      <RadzenText Text="@_users[data.UserId].Username" TextAlign="TextAlign.Center"
                                  class="fw-bold"></RadzenText>
                    </RadzenStack>
                  </Template>
                </RadzenDataGridColumn>
              </Columns>
            </RadzenDataGrid>
          </RadzenCard>
        }

      </RadzenRow>
    </RadzenColumn>
  </RadzenRow>
</div>