@page "/options"
@using Modmail.NET.Abstract
@using Modmail.NET.Features.Guild
@using Modmail.NET.Static
@using Modmail.NET.Web.Blazor.Providers
@using Serilog
@inject NavigationManager NavigationManager
@inject NotificationService NotificationService
@rendermode InteractiveServer
@inject ModmailDbContext DbContext
@inject ISender Sender
@attribute [AuthorizeTeam(nameof(AuthPolicy.Owner))]


@code {

  private GuildOption _guildOption;

  protected override async Task OnInitializedAsync() {
    _guildOption = await Sender.Send(new GetGuildOptionQuery(true));
    if (_guildOption is null) {
      NavigationManager.NavigateTo("/setup");
    }
  }


  private async Task SubmitAsync() {
    const string logMessage = $"[{nameof(Options)}]{nameof(SubmitAsync)}";
    try {
      if (_guildOption is null) {
        throw new InvalidOperationException("Guild option is null");
      }
      DbContext.Update(_guildOption);
      var affected = await DbContext.SaveChangesAsync();
      if (affected == 0) {
        NotificationService.Notify(NotificationSeverity.Success, "Failed", "Guild options could not be updated");
      }

      NotificationService.Notify(NotificationSeverity.Success, "Success", "Guild options updated successfully.");
    }
    catch (BotExceptionBase ex) {
      ex.NotifyException(NotificationService);
      Log.Warning(ex, logMessage);
    }
    catch (Exception ex) {
      ex.NotifyException(NotificationService);
      Log.Warning(ex, logMessage);
    }
  }


}

<div class="container rz-mx-auto">

  <RadzenRow>
    <RadzenColumn Size="12">
      <RadzenRow>
        <RadzenColumn Size="12">
          <RadzenText TextStyle="TextStyle.H3" class="fw-bold">
            Options
          </RadzenText>
          @* <hr class="my-4"/> *@
          <p>
            This page shows the list of options that can be configured for the bot
          </p>
        </RadzenColumn>
      </RadzenRow>
      <RadzenRow RowGap="4" class="rz-mt-5">
        @if (_guildOption is null) {
          <Loading></Loading>
        }
        else {
          <RadzenCard class="rz-shadow-7">
            <RadzenTemplateForm TItem="GuildOption" Data=@_guildOption Submit=@SubmitAsync>
              <RadzenRow class="rz-my-4">
                <RadzenSwitch Name="IsEnabled" @bind-Value=@_guildOption.IsEnabled/>
                <RadzenLabel Component="IsEnabled">
                  Enable ticket system
                </RadzenLabel>
              </RadzenRow>

              <RadzenRow class="rz-my-4">
                <RadzenSwitch Name="TakeFeedbackAfterClosing" @bind-Value=@_guildOption.TakeFeedbackAfterClosing/>
                <RadzenLabel Component="TakeFeedbackAfterClosing">
                  Take feedback from user
                </RadzenLabel>
              </RadzenRow>
              <RadzenRow class="rz-my-4">
                <RadzenSwitch Name="AlwaysAnonymous" @bind-Value=@_guildOption.AlwaysAnonymous/>
                <RadzenLabel Component="AlwaysAnonymous">
                  Force anonymous messages
                </RadzenLabel>
              </RadzenRow>

              @* <RadzenRow class="rz-my-4"> *@
              @*   <RadzenSwitch Name="ShowConfirmationWhenClosingTickets" Disabled="true" @bind-Value=@_guildOption.ShowConfirmationWhenClosingTickets/> *@
              @*   <RadzenLabel Component="ShowConfirmationWhenClosingTickets"> *@
              @*     Show a confirmation dialog when a moderator closes a ticket (Not implemented) *@
              @*   </RadzenLabel> *@
              @* </RadzenRow> *@

              <RadzenRow class="rz-my-4">
                <RadzenFormField class="w-100" Text="Ticket Timeout Hours" Variant="Variant.Outlined">
                  <RadzenNumeric @bind-Value="@_guildOption.TicketTimeoutHours"/>
                </RadzenFormField>
              </RadzenRow>
              <RadzenRow>
                <small class="text-secondary">
                  The time to wait in hours before a inactive ticket is automatically closed.
                </small>
              </RadzenRow>



              <RadzenRow class="rz-my-4">
                <RadzenFormField class="w-100" Text="Manage Ticket Access Level" Variant="Variant.Outlined">
                  <RadzenDropDown Style="user-select: none"
                                  Multiple="false"
                                  @bind-Value="@_guildOption.ManageTicketMinAccessLevel"
                                  Data="Enum.GetValues<TeamPermissionLevel>()"
                                  TValue="TeamPermissionLevel"
                                  AllowFiltering="false"/>
                </RadzenFormField>
              </RadzenRow>
              <RadzenRow>
                <small class="text-secondary">
                  Minimum access level for managing Ticket via Web
                </small>
              </RadzenRow>




              <RadzenRow class="rz-my-4">
                <RadzenFormField class="w-100" Text="Manage Blacklist Access Level" Variant="Variant.Outlined">
                  <RadzenDropDown Style="user-select: none"
                                  Multiple="false"
                                  @bind-Value="@_guildOption.ManageBlacklistMinAccessLevel"
                                  Data="Enum.GetValues<TeamPermissionLevel>()"
                                  TValue="TeamPermissionLevel"
                                  AllowFiltering="false"/>
                </RadzenFormField>
              </RadzenRow>
              <RadzenRow>
                <small class="text-secondary">
                  Minimum access level for managing Blacklist via Web
                </small>
              </RadzenRow>

              <RadzenRow class="rz-my-4">
                <RadzenFormField class="w-100" Text="Manage Ticket Type Access Level" Variant="Variant.Outlined">
                  <RadzenDropDown Style="user-select: none"
                                  Multiple="false"
                                  @bind-Value="@_guildOption.ManageTicketTypeMinAccessLevel"
                                  Data="Enum.GetValues<TeamPermissionLevel>()"
                                  TValue="TeamPermissionLevel"
                                  AllowFiltering="false"/>
                </RadzenFormField>
              </RadzenRow>
              <RadzenRow>
                <small class="text-secondary">
                  Minimum access level for managing Ticket Type via Web
                </small>
              </RadzenRow>

              <RadzenRow class="rz-my-4">
                <RadzenFormField class="w-100" Text="Manage Teams Access Level" Variant="Variant.Outlined">
                  <RadzenDropDown Style="user-select: none"
                                  Multiple="false"
                                  @bind-Value="@_guildOption.ManageTeamsMinAccessLevel"
                                  Data="new List<TeamPermissionLevel> {
                                      TeamPermissionLevel.Admin,
                                      TeamPermissionLevel.Owner
                                  }"
                                  TValue="TeamPermissionLevel"
                                  AllowFiltering="false"/>
                </RadzenFormField>
              </RadzenRow>
              <RadzenRow>
                <small class="text-secondary">
                  Minimum access level for managing Teams via Web
                </small>
              </RadzenRow>


              <RadzenRow class="rz-my-4">
                <RadzenFormField class="w-100" Text="Manage Hangfire Access Level" Variant="Variant.Outlined">
                  <RadzenDropDown Style="user-select: none"
                                  Multiple="false"
                                  @bind-Value="@_guildOption.ManageHangfireMinAccessLevel"
                                  Data="new List<TeamPermissionLevel> {
                                      TeamPermissionLevel.Admin,
                                      TeamPermissionLevel.Owner
                                  }"
                                  TValue="TeamPermissionLevel"
                                  AllowFiltering="false"/>
                </RadzenFormField>
              </RadzenRow>
              <RadzenRow>
                <small class="text-secondary">
                  Minimum access level for managing Hangfire via Web
                </small>
              </RadzenRow>


              @* <RadzenRow class="rz-my-4"> *@
              @*   <RadzenFormField Text="Greeting Message" Variant="Variant.Filled"> *@
              @*     <RadzenTextArea @bind-Value="@_guildOption.GreetingMessage" oninput="event.target.style.height = Math.max(event.target.clientHeight, event.target.scrollHeight) + 'px';" Style="min-height: 230px;min-width: 400px;max-width:  800px; white-space: pre-wrap;" aria-label="Auto-resize"/> *@
              @*   </RadzenFormField> *@
              @* *@
              @* </RadzenRow> *@
              @* <RadzenRow> *@
              @*   <small class="text-secondary"> *@
              @*     Bot's greeting message when a user opens a ticket. *@
              @*   </small> *@
              @* </RadzenRow> *@
              @* <RadzenRow class="rz-my-4"> *@
              @*   <RadzenFormField Text="Closing Message" Variant="Variant.Filled"> *@
              @*     <RadzenTextArea @bind-Value="@_guildOption.ClosingMessage" oninput="event.target.style.height = Math.max(event.target.clientHeight, event.target.scrollHeight) + 'px';" Style="min-height: 230px; min-width: 400px; max-width:  800px; white-space: pre-wrap;" aria-label="Auto-resize"/> *@
              @*   </RadzenFormField> *@
              @* *@
              @* </RadzenRow> *@
              @* <RadzenRow> *@
              @*   <small class="text-secondary"> *@
              @*     Bot's closing message when a user closes a ticket. *@
              @*   </small> *@
              @* </RadzenRow> *@

              <RadzenRow class="rz-my-4">
                <RadzenButton ButtonType="ButtonType.Submit" Text="Save Changes" Icon="check_circle"
                              ButtonStyle="ButtonStyle.Success"/>
              </RadzenRow>
            </RadzenTemplateForm>
          </RadzenCard>
        }

      </RadzenRow>
    </RadzenColumn>
  </RadzenRow>
</div>